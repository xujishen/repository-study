<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-4.3.xsd  
      http://www.springframework.org/schema/context  
      http://www.springframework.org/schema/context/spring-context-4.3.xsd  
      http://www.springframework.org/schema/mvc  
      http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
      http://www.springframework.org/schema/tx
      http://www.springframework.org/schema/tx/spring-tx-4.3.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd"
>

	<!-- 注解驱动 -->
	<mvc:annotation-driven/>
	<!-- 自动为切面方法中匹配的方法所在的类生成代理对象。 -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>

	<mvc:default-servlet-handler/>

	<!-- 默认开启基于JDK动态代理事务 -->
	<tx:annotation-driven/>
	
	<!-- 资源配置 (此配置下的文件路径不会被spring mvc所拦截) -->
	<mvc:resources mapping="/js/**" location="/WEB-INF/js/" />
	<mvc:resources mapping="/js/**" location="/webapp/WEB-INF/js/" /> 
	
	<!-- spring组件扫描路径 -->    
	<context:component-scan base-package="com.youdy"></context:component-scan>
    
    <!-- 多媒体配置 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 资源最大上传限制 -->
		<property name="maxUploadSize" value="10000000000000" />
	</bean>
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.youdy.mvc.mapper"/>
       	<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
	</bean>
	
	 <!-- 对模型视图名称的解析，在请求时模型视图名称添加前后缀 -->  
     <bean id="htmlResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:prefix="/WEB-INF/views/htmls/" p:suffix=".html" >
     </bean>
     
     <!-- json 解析 -->
     <bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
        <property name="extractValueFromSingleKeyModel" value="true" />
	</bean>
     
     <!-- 加载属性文件 -->
     <context:property-placeholder location="classpath*:config/jdbc.properties" />
     
     <bean id="dataSource" destroy-method="close" class="com.alibaba.druid.pool.DruidDataSource" init-method="init">
		<!-- class="org.apache.commons.dbcp.BasicDataSource" -->
		<property name="driverClassName" value="${db.jdbc.driverClassName}"/>
		<property name="url" value="${db.jdbc.url}"/>
		<property name="username" value="${db.jdbc.username}"/>
		<property name="password" value="${db.jdbc.password}"/>
		<property name="maxActive" value="${db.jdbc.maxActive}"/>
		<property name="maxIdle" value="${db.jdbc.maxIdle}"/>
		<property name="maxWait" value="${db.jdbc.maxWait}"/>
		<property name="validationQuery" value="${db.jdbc.validationQuery}" />

	</bean>
	
	<!-- 配置mybitasSqlSessionFactoryBean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:config/mybatis-config.xml"></property>
		<property name="mapperLocations">
			<list>
				<value>classpath*:mapper/*.xml</value>
			</list>
		</property>
	</bean>

	<!-- 缓存处理类 -->
	<bean id="cacheHandler" class="com.youdy.handler.CacheHandler" init-method="init" scope="singleton"></bean>
	
</beans>